var divPopupsEnabled = true;
var loadMessage;

function getScreenSize () {
    var width, height;
    if (self.innerHeight) {
    	width = self.innerWidth;
    	height = self.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) {
    	width = document.documentElement.clientWidth;
    	height = document.documentElement.clientHeight;
    } else if (document.body) {
    	width = document.body.clientWidth;
    	height = document.body.clientHeight;
    }
    return {x:width,y:height};
}

function centerElement(element,width,height) {
	var screenSize = getScreenSize();
	var offsetLeft = (screenSize.x - width) / 2;
    var offsetTop = (screenSize.y - height) / 2;
	element.style.position = 'absolute';
	element.style.top = offsetTop + 'px';
	element.style.left = offsetLeft + 'px';
	element.style.display = "block";
}

  function create(tag, attr,refNode) {
    element = document.createElement(tag);
    for (var key in attr) {
      switch (key) {
          case "innerHTML":
              element.innerHTML = attr[key]; 
              break;
          case "class":
              element.className = attr[key]; 
              break;
          default:
              element.setAttribute(key,attr[key]);
              break;
      }  
    } 
    refNode.appendChild(element);
    return element;
  }
  
  
  function addLoadMessage () {
      loadMessage = document.getElementById("loadingAjaxMessage")
      if (loadMessage == null) {
          try {
              loadMessage = create("div",{"id":"loadingAjaxMessage","class":"loadingMessage","innerHTML":"Loading..."},document.body);
              centerElement(loadMessage,100,25);
          } catch (e) {
              alert(e);
          }
      }
  }
  
  function showLoadMessage () {
      loadMessage.style.visibility = "visible";
  }
  
  function hideLoadMessage () {
      loadMessage.style.visibility = "hidden";
  }
  
  function createPopup (id,headerText, bodyText,hasInput,buttons) {
    var container = create("div",{"id":id,"class":"popup"},document.body);
    if (headerText) {create("div",{"innerHTML":headerText,"class":"popupHeader"},container);};
    if (bodyText) {create("div",{"innerHTML":bodyText,"class":"popupBody"},container)};
    if (hasInput) {var inputText = create("input",{"type":"text","class":"popupInput"},container)};
    var footer = create("div",{"class":"popupFooter"},container);
    for (var i = 0; i < buttons.length; i++) {
      var button = buttons[i];
      var newButton = create("input",{"type":"button","class":button.className,"value":button.value},footer);
      addEventListener(newButton,"click",buttons[i].callback,inputText); 
    }
    centerElement(container,170,150);
    return container;
  }

  function addEventListener(element,type,callback,inputText) {
    if (element.addEventListener) { 
      element.addEventListener(type, function () { callback.apply(this,new Array(inputText))},false);
    } else {
      element.attachEvent("on"+type, function () { callback.apply(this,new Array(inputText))});  
    }    
  }

  function close (id) {
    document.getElementById(id).parentNode.removeChild(document.getElementById(id));
  }
  
  function isPopUpOpened() {
	  var popUps = new Array("alertPopup","confirmPopup","prompPopup");
	  for (var i=0;i<popUps.length;i++) {
		  if (document.getElementById(popUps[i]) != null) {
			  return true;
		  }
	  }
	  return false;
  }
  

  function alertPopup(header, message) {
	if (isPopUpOpened()) { return; }
	if (divPopupsEnabled) {
      createPopup ("alertPopup",
    	           header,
                   message,
		 	       false,
                   new Array({"className":"buttonClass","value":"OK","callback":function(inputText) {close("alertPopup"); }}));
	} else {
	  alert(message);
	}
  }

  function confirmPopup(header, message, okCallback, cancelCallback) {
	if (isPopUpOpened()) { return; }  
	if (divPopupsEnabled) {
      createPopup ("confirmPopup",
    	           header,
                   message,
		 	  	   false,
		 		   new Array(
		 		     {"className":"buttonClass","value":"Yes","callback":function(inputText) {try {okCallback.apply();} finally {close("confirmPopup");} }},
		 		     {"className":"buttonClass","value":"No","callback":function(inputText) {try {cancelCallback.apply();} finally {close("confirmPopup");} }}
                   ));
	} else {
	  if (confirm(message)) {
		  okCallback.apply();
	  } else {
		  cancelCallback.apply();
	  }	  	
	}
  }

  function promptPopup(header,message,okCallback,cancelCallback) {
	if (isPopUpOpened()) { return; }
    if (divPopupsEnabled) {	  
      createPopup (
        "promptPopup",
        header,
        message,
        true,
        new Array(
        {"className":"buttonClass","value":"OK","callback":function(inputText) { try {okCallback.apply(this,new Array(inputText));} finally {close("promptPopup");} }},
        {"className":"buttonClass","value":"Cancel","callback":function(inputText) { try{cancelCallback.apply(this,new Array(inputText));} finally {close("promptPopup");} }})
      );
    } else {
    	var message = prompt(message);
    	if (message) {
    		okCallback.apply(this,new Array({"value":message}));
    	} else {
    		cancelCallback.apply(this,new Array({"value":message}));
    	}
    }	
  }


  function confirmTest () {
      confirmPopup("Save Confirmation",
    	           "Do you want to save the file: 'nuevo.html' ?",
	               function () { alert ("yes")},    
                   function () { alert ("no")});
  }

  function promptTest () {
      promptPopup("Save File",
    		      "Do you want to save it ?",
	              function (inputText) { alert ('yes' + inputText.value)},    
                  function (inputText) { alert ('no' + inputText.value)});

  }

  function alertTest () {
	  alertPopup('Message', 'This is an alert');
  }